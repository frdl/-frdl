#! /usr/bin/env node
/*! @ frdl.Frdlweb.js.Compiler.es6 : no */
/*! @ frdl.Frdlweb.js.Compiler.defaultPlugin : frdlcjs */

 
if(typeof define !== 'function'){ 
 var define = (require('amdefine'))(module); 
}


define( [ 'try-require',  'co',  'co-prompt',  'axios', 'subarg', 'commander', 'clone'], 
	   function( tryRequire, co,prompt, axios, subarg, program, clone ){
 'use strict';
	
	
var shell = tryRequire("shelljs");
//var program = clone(p);
//var program = p;
	
function FF(file){
  console.log(file);	
}
	
	
program
 // .version('0.1.0')
  .option('-f, --file [file]', 'enable some file', FF)
//  .option('-b, --bar', 'enable some bar')
//  .option('-B, --baz', 'enable some baz')
 // .option('-h, --help', 'output usage information')  //-h, --help     output usage information
	
// must be before .parse() since
// node's emit() is immediate

  .action(function(cmd, file) {
	//var args = Array.prototype.splice(arguments);
	
	console.log('cmd', cmd);
	console.log('file', file);
	console.log('process.argv', process.argv);
	  
  })
	;
//console.log('shell', shell);
if('undefined'===typeof shell){
 	
}else{
   program.parse(process.argv);
}


 
	
	return program;
});