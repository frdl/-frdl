#! /usr/bin/env node


 var amdefine = require('amdefine');
 var define = amdefine(module); 


define( [ 'try-require',  'co',  'co-prompt',  'axios', 'subarg', 'commander', 'clone'], function( tryRequire, co,prompt, axios, subarg, program, clone ){
 'use strict';
	
	
var shell = tryRequire("shelljs");

function FF(file){
  console.log(file);	
}
	
	
program
   
   .usage('frdl bundlejs <entry> [options] \n\tRegister Workspace: \n\t\thttps://frdl.webfan.de/?op=webaccount&task=new_blog#new_blog'
		 + '\n\tDownload UI: \n\t\tPhp-Installer: https://webfan.de/install/php/ ')
	.arguments('bundlejs [[entry]]')


	.option('-n, --name [module]', 'name of destination library/module')
	
	.option('-W, --workspace [host]', 'select api-host, e.g. "frdl.webfan.de", or "your-name.webfan.de"')
	.option('-d, --dist [dist]', 'build/dist -directory (for output)')
	.option('-b, --base [base]', 'base-uri/web-path of application')
	.option('-a, --assets [assets]', 'assets-path of application')
	.option('-m, --modules [modules]', '(OPTIONAL) modules-path of application, ,defaults to `modules`')
	
	 .option('-l, --defaults', 'Build default boilerplates')

 
  .action(function(entry) {


    try{
	    var project = require(process.cwd() + '/frdl.project.json');
	  }catch(e){
	     var project = {};
	  }

	require('./../build.js')(
		entry,
		program.name || project.jsglobal || 'frdlweb',
		program.workspace || project.workspace || 'frdl.webfan.de',
		program.dist,
		program.base,
		program.assets, 
		process.cwd(),
		'config.main.'+((new Date()).getTime())+'.next-bundle.js',
		'https:',
		program.modules || project.modules_dirname || 'modules', 
		program.defaults
	)
	; 

	  	
	
	
  })
	;

if('undefined'===typeof shell){
 	
}else{
   program.parse(process.argv);
}


 
	
 return program;
});