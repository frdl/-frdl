#! /usr/bin/env node
/*! @ frdl.Frdlweb.js.Compiler.es6 : no */
/*! @ frdl.Frdlweb.js.Compiler.defaultPlugin : frdlcjs */

 
if(typeof define !== 'function'){ 
 var define = (require('amdefine'))(module); 
}


define( [ 'try-require',  'co',  'co-prompt',  'axios', 'subarg', 'commander', 'clone', 'path'], 
	   function( tryRequire, co,prompt, axios, subarg, program, clone, path ){
 'use strict';
	
	
var shell = tryRequire("shelljs");
//var program = clone(p);
//var program = p;
	
function FF(file){
  console.log(file);	
}
	

var tpl_help = `


`;

program
   .usage('frdl boilerplate <templates> [options] \n\tInstall or use DFAULT-Templates/-Libraries/-Components (Komma separated list of boilerplates,\ne.g.: `$ frdl boilerplate "legacy,webfan3" ...` ) \n\t\tYou should run this command within a valid `frdl project` directory!')
	.arguments('boilerplate [templates]')
 // .version('0.1.0')

//	.option('-n, --name [module]', 'name of destination library/module')
	
	.option('-W, --workspace [host]', 'select api-host, e.g. "frdl.webfan.de", or "your-name.webfan.de", defaults to `domainundhomepagespeicher.webfan.de`', 'domainundhomepagespeicher.webfan.de')
	.option('-d, --dist [dist]', '(OPTIONAL) Asstes-Destination-Path (javascripts, css-, images-, html-, webfiles of the build.\nYou should run this command within a valid `frdl project` directory!', path.resolve(process.cwd(), 'www_root/app/js'))
	.option('-b, --base [base]', '(OPTIONAL) base-uri/web-path of application', '/app/js/')
	.option('-a, --assets [assets]', '(OPTIONAL) assets-path of application', path.resolve(process.cwd(), 'assets'))
	.option('-m, --modules [modules]', '(OPTIONAL) modules-path of application, defaults to `modules`', 'modules')
// must be before .parse() since
// node's emit() is immediate
 
  .action(function(templates) {
      var msg;
  
	   
	  if(path.resolve(process.cwd(), 'bin')  === __dirname){
		 msg='The working-directory is not a valid project-directory!'; 
		 console.error(msg); 
	     process.exit(msg);
	   }
	   
	  if('string'!==typeof templates){
	     process.exit('You must specify templates, e.g.: `$ frdl boilerplate "legacy,webfan3" ...`');
	   }	   

	 var o = {
	   recipes : templates.split(/[\,\;\s]/),
	   //Frdlweb : require('./frdlweb').Frdlweb,
	   instance : require('./frdlweb').instance,
	   F : require('./frdlweb'),
	//   configs : require('./frdlweb').instance.configs.toData()
	 };  
         o.projectDir = process.cwd();	   
         o.workspace = program.workspace || 'domainundhomepagespeicher.webfan.de';
         o.dist = program.dist || path.resolve(o.projectDir, 'www_root/app/js');
         o.base = program.base || 'https://' + o.workspace + '/app/js/';
         o.assets = program.assets || path.resolve(o.projectDir, 'assets');
         o.modules = program.modules || 'modules';	  

	   
	   console.log(o);
  })
	;
//console.log('shell', shell);
if('undefined'===typeof shell){
 	
}else{
   program.parse(process.argv);
}


 
	
	return program;
});