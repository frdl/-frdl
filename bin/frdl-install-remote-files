#! /usr/bin/env node


var lib =  require('frdl/assets/node_modules/generate-guid-simple'); 

 var amdefine = require('amdefine');
 var define = amdefine(module); 


define( [ 'try-require',  'co',  'co-prompt',  'axios', 'subarg', 'commander', 'clone'], function( tryRequire, co,prompt, axios, subarg, program, clone ){
 'use strict';
	
	
var shell = tryRequire("shelljs");

function FF(file){
  console.log(file);	
}
	
	
program
   
   .usage('frdl install-remote-files <dir> [options]')
	.arguments('install-remote-files [[dir]]')


	.option('-f, --file [file]', 'Configuration file (.json)')
	
	.option('-k, --config [key]', 'The config-objects member/key to process as config')	
	.option('-l, --logfile [[log]]', 'Logfile')
	.option('-c, --callback [[cmd]]', 'Callback command on finish')

 
  .action(function(entry) {


    try{
	    var project = require(process.cwd() + '/frdl.project.json');
	  }catch(e){
	     var project = {};
	  }
	  
	  require(require('path').resolve(__dirname, "../install-remote-files.js"));
 	
	
	
  })
	;

if('undefined'===typeof shell){
 	
}else{
   program.parse(process.argv);
}


 
	
 return program;
});